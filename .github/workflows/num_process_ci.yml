name: num_process_CI

on:
  push:
    branches: [ "main", "master"]
  pull_request:
    branches: [ "main", "master"]
  workflow_dispatch:

jobs:
  build-and-test:
    runs-on: ubuntu-22.04

    container:
      image: ros:humble 

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4


      - name: Install dependencies with rosdep
        run: |
          # 为需要系统权限的命令添加 sudo
          sudo apt-get update
          sudo rosdep init && rosdep update
          rosdep install --from-paths src --ignore-src -y --rosdep-keys="python3-yaml"



      - name: Build workspace

        run: |
          source /opt/ros/humble/setup.bash
          colcon build --symlink-install

      - name: Run tests
        run: |
          source install/setup.bash
          colcon test --packages-select my_testing --pytest-args "--junit-xml=test_results.xml"

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: build/my_testing/test_results.xml




#可否跑在指定机器
#如果要测...在他的服务器跑没有意义





# name: num_process_CI

# # 触发工作流的事件
# on:
#   push:
#     branches: [ "main", "master"]
#   pull_request:
#     branches: [ "main", "master"]

#   workflow_dispatch:

# jobs:
#   # 名为 build-and-test
#   build-and-test:
#     runs-on: ubuntu-22.04

#     # 执行步骤
#     steps:
#       # 检出代码
#       - name: Checkout repository
#         uses: actions/checkout@v4


#       - name: Setup ROS 2
#         uses: ros-tooling/setup-ros@v0.7
#         with:
#           required-ros-distributions: humble

#       # 使用 rosdep 安装所有依赖项，自动读取所有 package.xml 文件，并安装其中声明的依赖
#       - name: Install dependencies
#         run: |
#           sudo apt-get update
#           rosdep update
#           rosdep install --from-paths src --ignore-src -y --rosdistro humble


#       - name: Build workspace
#         run: |
#           source /opt/ros/humble/setup.bash
#           colcon build

#       - name: Run tests
#         run: |
#           source install/setup.bash
#           colcon test --packages-select my_testing --pytest-args "--junit-xml=test_results.xml"


#       - name: Upload test results
#         if: always()
#         uses: actions/upload-artifact@v4
#         with:
#           name: test-results
#           path: build/my_testing/test_results.xml